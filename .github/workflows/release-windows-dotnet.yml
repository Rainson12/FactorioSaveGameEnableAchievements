name: .NET Windows Release ðŸš€

on:
  push:
    branches:
      - master
  workflow_dispatch:  # Permite execuÃ§Ã£o manual

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Pega todas as tags existentes

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x

    - name: Build Project
      run: dotnet build --configuration Release

    - name: Publish Artifacts
      run: |
        mkdir release
        dotnet publish -c Release -o release

    - name: Create Zip Archive
      run: zip -r release.zip release/

    - name: Generate Version Tag
      id: tag
      run: |
        GAME_VERSION="2.0.28"
        LATEST_TAG=$(git tag --sort=-v:refname | grep "^${GAME_VERSION}-" | head -n 1)
        
        if [ -z "$LATEST_TAG" ]; then
          NEW_TAG="${GAME_VERSION}-1.0"
        else
          LAST_VERSION=$(echo $LATEST_TAG | awk -F '-' '{print $2}')
          NEW_VERSION=$(echo "$LAST_VERSION + 0.1" | bc)
          NEW_TAG="${GAME_VERSION}-$(printf %.1f $NEW_VERSION)"
        fi

        echo "NEW_TAG=$NEW_TAG"
        git tag $NEW_TAG
        git push origin $NEW_TAG
        echo "tag=$NEW_TAG" >> $GITHUB_ENV

    - name: Draft Release
      id: draft_release
      uses: release-drafter/release-drafter@v5
      with:
        config-name: release-drafter.yml
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Publish Release
      uses: ncipollo/release-action@v1
      with:
        tag: ${{ env.tag }}
        name: "Release ${{ env.tag }}"
        body: ${{ steps.draft_release.outputs.body }}
        artifacts: "release.zip"
        draft: false
        prerelease: false
