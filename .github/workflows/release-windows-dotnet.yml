name: .NET Windows Release ðŸš€

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x

      - name: Build Project
        run: dotnet build --configuration Release

      - name: Publish Artifacts
        run: |
          mkdir -p release
          dotnet publish ./FactorioSaveGameEnableAchievements/FactorioSaveGameEnableAchievements.csproj -c Release -o release

      - name: Create Zip Archive
        run: zip -r release.zip release/

      # Define identidade do GitHub Action
      - name: Set Git Identity
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"

      # Gera Tags AutomÃ¡ticas
      - name: Generate Version Tag
        id: tag
        run: |
          GAME_VERSION="2.0.28"
          LATEST_TAG=$(git tag --sort=-v:refname | grep "^${GAME_VERSION}-" | head -n 1)

          if [ -z "$LATEST_TAG" ]; then
            NEW_TAG="${GAME_VERSION}-1.0"
            git tag -a $NEW_TAG -m "Initial Release $NEW_TAG"
            git push origin $NEW_TAG
          else
            LAST_VERSION=$(echo $LATEST_TAG | awk -F '-' '{print $2}')
            NEW_VERSION=$(echo "$LAST_VERSION + 0.1" | bc)
            NEW_TAG="${GAME_VERSION}-$(printf %.1f $NEW_VERSION)"
            git tag -a $NEW_TAG -m "Release $NEW_TAG"
            git push origin $NEW_TAG
          fi
          echo "current_tag=$NEW_TAG" >> $GITHUB_ENV
          echo "previous_tag=$LATEST_TAG" >> $GITHUB_ENV

      # Executa o Script do Changelog
      - name: Grant execute permissions to the script
        run: chmod +x .github/scripts/generate-changelog.sh

      - name: Generate Changelog from Script
        run: ./.github/scripts/generate-changelog.sh

      # Cria o draft usando o release-drafter
      - name: Draft Release
        id: draft_release
        uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Publica o release combinando draft + changelog
      - name: Publish Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ env.current_tag }}
          name: "Release ${{ env.current_tag }}"
          body: |
            ${{ steps.draft_release.outputs.body }}
            ---
            $(cat changelog.md)
          artifacts: "release.zip"
          draft: false
          prerelease: false
